import{_ as i,c as a,o as e,b1 as t}from"./chunks/framework.amL30PCb.js";const c=JSON.parse('{"title":"Starting contributing","description":"","frontmatter":{"sidebar":true,"layout":"doc","aside":false,"prev":false,"next":false},"headers":[],"relativePath":"en/contribution/index.md","filePath":"en/contribution/index.md"}'),n={name:"en/contribution/index.md"};function l(o,s,h,r,p,d){return e(),a("div",null,[...s[0]||(s[0]=[t(`<h1 id="starting-contributing" tabindex="-1">Starting contributing <a class="header-anchor" href="#starting-contributing" aria-label="Permalink to &quot;Starting contributing&quot;">​</a></h1><p><strong>This document has been translated using DeepL, please improve if necessary!</strong></p><h2 id="submission-methods" tabindex="-1">Submission Methods <a class="header-anchor" href="#submission-methods" aria-label="Permalink to &quot;Submission Methods&quot;">​</a></h2><p>Currently, you can choose from the following three methods to provide data:</p><ol><li>Refer to the corresponding guide on the left based on the type, then fork <a href="https://github.com/LiarOnce-LoongAL/loong-compatible-database" target="_blank" rel="noreferrer">this repository</a>, make your modifications, and initiate a PR to me.</li><li><a href="https://github.com/LiarOnce-LoongAL/loong-compatible-database/issues" target="_blank" rel="noreferrer">create an issue here</a>. choose a appropriate form template, following the description to fill and submit the issue</li><li>(<strong>For Hardware Info</strong>) Use the <code>hw-probe</code> tool to execute the following command:</li></ol><blockquote><p><strong>Note: hw-probe will also upload the collected logs, please consider this method accordingly</strong></p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hw-probe</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -all</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -upload</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># You will get the following output</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Probe</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hardware</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ...</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Ok</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Reading</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> logs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ...</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Ok</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Uploaded</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DB,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Thank</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> you!</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Probe</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> URL:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://linux-hardware.org/?probe=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generated</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Then <a href="https://github.com/LiarOnce-LoongAL/loong-compatible-database/issues" target="_blank" rel="noreferrer">create an issue here</a>, select the <code>(Markdown) 添加硬件信息 / Add Hardware Info</code> template and submit the Probe URL.</p><h2 id="external-documents" tabindex="-1">External Documents <a class="header-anchor" href="#external-documents" aria-label="Permalink to &quot;External Documents&quot;">​</a></h2><p>If you fork/editing the repository and the hardware or software requires formal documentation for compatibility, please modify the file according to the following:</p><p>First go to <code>/docs/.vitepress/config_files/sidebar_&lt;hardwares|lat|liblol&gt;.js</code> and fill in the link address and title of the document according to the type, an example is shown below:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{ </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&lt;Document Title&gt;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">link</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&lt;Document Link&gt;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre></div><p>where <code>link</code> has the same value as <code>link</code> in the <code>.yml</code> file.</p>`,13)])])}const g=i(n,[["render",l]]);export{c as __pageData,g as default};
